FROM ubuntu:latest

ARG GODOT_VERSION=4.4.1
ARG MONO=false

RUN dpkg --add-architecture i386

# Install necessary packages
# We need to run with xvfb and graphics libs because gdUnit depends on it for integration tests
RUN apt-get update && \
    apt-get install -y \
        git \
        git-lfs \
        wget \
        unzip \
        xvfb \
        zip \
        wine \
        wine32 \
        gvfs-backends \
        mesa-utils && \
    bash -c '\
        if [ "$MONO" = "true" ]; then \
            apt-get install -y mono-complete && \
            wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh && \
            chmod +x dotnet-install.sh && \
            ./dotnet-install.sh --channel 9.0; \
        fi' && \
    rm -rf /var/lib/apt/lists/*


# Download rcedit change the windows build icon
RUN wget https://github.com/electron/rcedit/releases/download/v2.0.0/rcedit-x86.exe -O /usr/local/bin/rcedit.exe && \
    chmod +x /usr/local/bin/rcedit.exe

# Initialize Wine (this creates the wine prefix and installs necessary components)
RUN wine --version && \
    wineboot --init

# Set environment variables to prevent runtime errors
ENV XDG_RUNTIME_DIR=/tmp/runtime
ENV LIBGL_ALWAYS_SOFTWARE=true
ENV DOTNET_ROOT=/root/.dotnet
ENV PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools
RUN mkdir -p /tmp/runtime

# Install Godot and export templates
COPY setup_godot.sh /usr/local/bin/setup_godot.sh
RUN chmod +x /usr/local/bin/setup_godot.sh
RUN /usr/local/bin/setup_godot.sh $GODOT_VERSION $MONO

# Run Godot once to create editor settings
RUN godot --headless --quit

# Set rcedit path in editor settings
RUN echo 'export/windows/rcedit = "/usr/local/bin/rcedit.exe"' >> ~/.config/godot/editor_settings-4.4.tres

# Set the default command (if needed)
CMD ["/bin/bash"]
